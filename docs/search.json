[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Welcome to my website! My name is Kiera and I am a student taking NM2207. A current Year 2 Undergraduate student, I am pursuing my major of Communications and New Media, with a minor in Business Management and Interactive Media Development."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Kiera’s website",
    "section": "",
    "text": "Identified data set\nI have chosen the data set named “Laptop Prices Based on its specifications “ by user Abdul Rehman Amer from the website Kaggle. I will attempt to answer the question: What is the correlation between laptop specifications and pricing information, and which specifications are most strongly associated with the price of laptops?\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nmy_data &lt;- read.csv(\"laptop_data.csv\")\nglimpse(my_data)\n\nRows: 1,303\nColumns: 12\n$ X                &lt;int&gt; 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,…\n$ Company          &lt;chr&gt; \"Apple\", \"Apple\", \"HP\", \"Apple\", \"Apple\", \"Acer\", \"Ap…\n$ TypeName         &lt;chr&gt; \"Ultrabook\", \"Ultrabook\", \"Notebook\", \"Ultrabook\", \"U…\n$ Inches           &lt;dbl&gt; 13.3, 13.3, 15.6, 15.4, 13.3, 15.6, 15.4, 13.3, 14.0,…\n$ ScreenResolution &lt;chr&gt; \"IPS Panel Retina Display 2560x1600\", \"1440x900\", \"Fu…\n$ Cpu              &lt;chr&gt; \"Intel Core i5 2.3GHz\", \"Intel Core i5 1.8GHz\", \"Inte…\n$ Ram              &lt;chr&gt; \"8GB\", \"8GB\", \"8GB\", \"16GB\", \"8GB\", \"4GB\", \"16GB\", \"8…\n$ Memory           &lt;chr&gt; \"128GB SSD\", \"128GB Flash Storage\", \"256GB SSD\", \"512…\n$ Gpu              &lt;chr&gt; \"Intel Iris Plus Graphics 640\", \"Intel HD Graphics 60…\n$ OpSys            &lt;chr&gt; \"macOS\", \"macOS\", \"No OS\", \"macOS\", \"macOS\", \"Windows…\n$ Weight           &lt;chr&gt; \"1.37kg\", \"1.34kg\", \"1.86kg\", \"1.83kg\", \"1.37kg\", \"2.…\n$ Price            &lt;dbl&gt; 71378.68, 47895.52, 30636.00, 135195.34, 96095.81, 21…\n\n\n \n\nlibrary(tidyverse)\nlibrary(fixerapi)\n\nWarning: package 'fixerapi' was built under R version 4.3.3\n\noptions(scipen = 999)\n\nlaptop_data &lt;- read_csv(\"laptop_data.csv\")\n\nNew names:\nRows: 1303 Columns: 12\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(9): Company, TypeName, ScreenResolution, Cpu, Ram, Memory, Gpu, OpSys, ... dbl\n(3): ...1, Inches, Price\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -&gt; `...1`\n\nbrand_nos &lt;- laptop_data %&gt;% \n  group_by(Company) %&gt;% \n  tally() %&gt;% \n  filter(n&gt;10) %&gt;% \n  arrange(desc(n))\n\nprint(brand_nos)\n\n# A tibble: 8 × 2\n  Company     n\n  &lt;chr&gt;   &lt;int&gt;\n1 Dell      297\n2 Lenovo    297\n3 HP        274\n4 Asus      158\n5 Acer      103\n6 MSI        54\n7 Toshiba    48\n8 Apple      21\n\n\n\nbrand_quantity &lt;- laptop_data %&gt;% \n  select(Company, Weight, Price) %&gt;% \n  group_by(Company) %&gt;% \n  mutate(count = n()) %&gt;% \n  filter(count&gt;10) %&gt;% \n  ungroup() %&gt;% \n  select(-count)\n\ntosgd &lt;- 0.016\ntousd &lt;- 0.012\n\nbrand_quantity &lt;- brand_quantity %&gt;% \n  mutate(Price = Price * tousd)\n\nprint(brand_quantity)\n\n# A tibble: 1,252 × 3\n   Company Weight Price\n   &lt;chr&gt;   &lt;chr&gt;  &lt;dbl&gt;\n 1 Apple   1.37kg  857.\n 2 Apple   1.34kg  575.\n 3 HP      1.86kg  368.\n 4 Apple   1.83kg 1622.\n 5 Apple   1.37kg 1153.\n 6 Acer    2.1kg   256.\n 7 Apple   2.04kg 1368.\n 8 Apple   1.34kg  741.\n 9 Asus    1.3kg   956.\n10 Acer    1.6kg   492.\n# ℹ 1,242 more rows\n\nggplot(brand_nos, aes(x = n, y = Company)) + geom_bar(stat=\"identity\")\n\n\n\nggplot(brand_quantity, aes(x = Price, y = Company)) + geom_boxplot()"
  }
]