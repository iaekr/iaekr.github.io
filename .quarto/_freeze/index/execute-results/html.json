{
  "hash": "eb77fe408b0b4f28e202aff4d2403665",
  "result": {
    "markdown": "---\ntitle: \"Kiera's website\"\n---\n\n\n# Identified data set\n\nI have chosen the data set named \"**Laptop Prices Based on its specifications \"** by user Abdul Rehman Amer from the website Kaggle. I will attempt to answer the question: How many types of laptops do each brand make, and which brands make the most expensive and most affordable types of laptops?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlaptop_data <- read.csv(\"laptop_data.csv\")\nglimpse(laptop_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 1,303\nColumns: 12\n$ X                <int> 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,…\n$ Company          <chr> \"Apple\", \"Apple\", \"HP\", \"Apple\", \"Apple\", \"Acer\", \"Ap…\n$ TypeName         <chr> \"Ultrabook\", \"Ultrabook\", \"Notebook\", \"Ultrabook\", \"U…\n$ Inches           <dbl> 13.3, 13.3, 15.6, 15.4, 13.3, 15.6, 15.4, 13.3, 14.0,…\n$ ScreenResolution <chr> \"IPS Panel Retina Display 2560x1600\", \"1440x900\", \"Fu…\n$ Cpu              <chr> \"Intel Core i5 2.3GHz\", \"Intel Core i5 1.8GHz\", \"Inte…\n$ Ram              <chr> \"8GB\", \"8GB\", \"8GB\", \"16GB\", \"8GB\", \"4GB\", \"16GB\", \"8…\n$ Memory           <chr> \"128GB SSD\", \"128GB Flash Storage\", \"256GB SSD\", \"512…\n$ Gpu              <chr> \"Intel Iris Plus Graphics 640\", \"Intel HD Graphics 60…\n$ OpSys            <chr> \"macOS\", \"macOS\", \"No OS\", \"macOS\", \"macOS\", \"Windows…\n$ Weight           <chr> \"1.37kg\", \"1.34kg\", \"1.86kg\", \"1.83kg\", \"1.37kg\", \"2.…\n$ Price            <dbl> 71378.68, 47895.52, 30636.00, 135195.34, 96095.81, 21…\n```\n:::\n:::\n\n\nFrom the glimpse of the dataset here, we see that it includes many specifications such as CPU, Ram, Memory, GPU, the type of Operating System and even Weight, which I had originally intended to use in visualising their effects on the pricing of each computer. However, I realised that these are mostly categorical variables, which is difficult to convert into numerical variables that we can perform meaningful data analysis on.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntotal_brands_and_laptops <- glimpse(laptop_data) %>%\n  group_by(Company) %>%\n  tally()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 1,303\nColumns: 12\n$ X                <int> 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,…\n$ Company          <chr> \"Apple\", \"Apple\", \"HP\", \"Apple\", \"Apple\", \"Acer\", \"Ap…\n$ TypeName         <chr> \"Ultrabook\", \"Ultrabook\", \"Notebook\", \"Ultrabook\", \"U…\n$ Inches           <dbl> 13.3, 13.3, 15.6, 15.4, 13.3, 15.6, 15.4, 13.3, 14.0,…\n$ ScreenResolution <chr> \"IPS Panel Retina Display 2560x1600\", \"1440x900\", \"Fu…\n$ Cpu              <chr> \"Intel Core i5 2.3GHz\", \"Intel Core i5 1.8GHz\", \"Inte…\n$ Ram              <chr> \"8GB\", \"8GB\", \"8GB\", \"16GB\", \"8GB\", \"4GB\", \"16GB\", \"8…\n$ Memory           <chr> \"128GB SSD\", \"128GB Flash Storage\", \"256GB SSD\", \"512…\n$ Gpu              <chr> \"Intel Iris Plus Graphics 640\", \"Intel HD Graphics 60…\n$ OpSys            <chr> \"macOS\", \"macOS\", \"No OS\", \"macOS\", \"macOS\", \"Windows…\n$ Weight           <chr> \"1.37kg\", \"1.34kg\", \"1.86kg\", \"1.83kg\", \"1.37kg\", \"2.…\n$ Price            <dbl> 71378.68, 47895.52, 30636.00, 135195.34, 96095.81, 21…\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmessage(\"Hence, I decided to focus on the company producing the laptops, arriving at the problem statement outlined above. In the dataset, there are a total of \", total_brands_and_laptops, \" rows.\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nHence, I decided to focus on the company producing the laptops, arriving at the problem statement outlined above. In the dataset, there are a total of c(\"Acer\", \"Apple\", \"Asus\", \"Chuwi\", \"Dell\", \"Fujitsu\", \"Google\", \"HP\", \"Huawei\", \"LG\", \"Lenovo\", \"MSI\", \"Mediacom\", \"Microsoft\", \"Razer\", \"Samsung\", \"Toshiba\", \"Vero\", \"Xiaomi\")c(103, 21, 158, 3, 297, 3, 3, 274, 2, 3, 297, 54, 7, 6, 7, 9, 48, 4, 4) rows.\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntotal_brands_and_laptops <- glimpse(laptop_data) %>%\n  group_by(Company) %>%\n  tally()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 1,303\nColumns: 12\n$ X                <int> 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,…\n$ Company          <chr> \"Apple\", \"Apple\", \"HP\", \"Apple\", \"Apple\", \"Acer\", \"Ap…\n$ TypeName         <chr> \"Ultrabook\", \"Ultrabook\", \"Notebook\", \"Ultrabook\", \"U…\n$ Inches           <dbl> 13.3, 13.3, 15.6, 15.4, 13.3, 15.6, 15.4, 13.3, 14.0,…\n$ ScreenResolution <chr> \"IPS Panel Retina Display 2560x1600\", \"1440x900\", \"Fu…\n$ Cpu              <chr> \"Intel Core i5 2.3GHz\", \"Intel Core i5 1.8GHz\", \"Inte…\n$ Ram              <chr> \"8GB\", \"8GB\", \"8GB\", \"16GB\", \"8GB\", \"4GB\", \"16GB\", \"8…\n$ Memory           <chr> \"128GB SSD\", \"128GB Flash Storage\", \"256GB SSD\", \"512…\n$ Gpu              <chr> \"Intel Iris Plus Graphics 640\", \"Intel HD Graphics 60…\n$ OpSys            <chr> \"macOS\", \"macOS\", \"No OS\", \"macOS\", \"macOS\", \"Windows…\n$ Weight           <chr> \"1.37kg\", \"1.34kg\", \"1.86kg\", \"1.83kg\", \"1.37kg\", \"2.…\n$ Price            <dbl> 71378.68, 47895.52, 30636.00, 135195.34, 96095.81, 21…\n```\n:::\n\n```{.r .cell-code}\nnrow(total_brands_and_laptops)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 19\n```\n:::\n:::\n\n\nremoved brands who produced less than 20 laptops from the dataset\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(fixerapi)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'fixerapi' was built under R version 4.3.3\n```\n:::\n\n```{.r .cell-code}\noptions(scipen = 999)\n\nlaptop_data <- read_csv(\"laptop_data.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nNew names:\nRows: 1303 Columns: 12\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(9): Company, TypeName, ScreenResolution, Cpu, Ram, Memory, Gpu, OpSys, ... dbl\n(3): ...1, Inches, Price\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -> `...1`\n```\n:::\n\n```{.r .cell-code}\nbrand_nos <- laptop_data %>% \n  group_by(Company) %>% \n  tally() %>% \n  filter(n>10) %>% \n  arrange(desc(n))\n\nprint(brand_nos)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 8 × 2\n  Company     n\n  <chr>   <int>\n1 Dell      297\n2 Lenovo    297\n3 HP        274\n4 Asus      158\n5 Acer      103\n6 MSI        54\n7 Toshiba    48\n8 Apple      21\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbrand_quantity <- laptop_data %>% \n  select(Company, Weight, Price) %>% \n  group_by(Company) %>% \n  mutate(count = n()) %>% \n  filter(count>10) %>% \n  ungroup() %>% \n  select(-count)\n\ntosgd <- 0.016\ntousd <- 0.012\n\nbrand_quantity <- brand_quantity %>% \n  mutate(Price = Price * tousd)\n\nprint(brand_quantity)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1,252 × 3\n   Company Weight Price\n   <chr>   <chr>  <dbl>\n 1 Apple   1.37kg  857.\n 2 Apple   1.34kg  575.\n 3 HP      1.86kg  368.\n 4 Apple   1.83kg 1622.\n 5 Apple   1.37kg 1153.\n 6 Acer    2.1kg   256.\n 7 Apple   2.04kg 1368.\n 8 Apple   1.34kg  741.\n 9 Asus    1.3kg   956.\n10 Acer    1.6kg   492.\n# ℹ 1,242 more rows\n```\n:::\n:::\n\n\nBelow is the plot of the **number of computers** each **company** produces against the **price of each unit of computers**. Here, we can see which company tends to produce more affordable ranges of computers, and which company tends to produce more expensive range of computers.\\\n\\\nWe observe some outliers in the data as well. In this box plot, while the whiskers of each box vary, there are some data points that indiciate one or two abnormally expensive computers that lie beyond even the maximum value of the range of computers.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(brand_nos, aes(x = n, y = Company)) + geom_bar(stat=\"identity\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(brand_quantity, aes(x = Price, y = Company)) + geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-2.png){width=672}\n:::\n:::\n\n\nFor example, Lenovo produces one laptop that costs more than \\$3,000, unusual as their line of laptops usually range from less than \\$500 to less than \\$1,000. ASUS also produces two computers that cost around \\$1,500, despite its range of products largely falling under \\$1,000. We can also see that Apple and MSI are the most consistent in their pricings, as there are no outliers in their box plots. They also happen to have the highest mean prices for their laptops, alongside Toshiba.\n\n\n```{=html}\n<iframe height=\"400\" width=\"100%\" frameborder=\"no\" src=\"https://iaekr.shinyapps.io/sample_app_nm2207/\"> </iframe>\n```\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}