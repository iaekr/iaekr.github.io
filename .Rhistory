df$Threat <-apply(df[,3:5],1,mean)
df$NSuse <-apply(df[,13:18],1,mean)
print(sd(df$Threat))
print(sd(df$NSuse))
Threat <- data.frame(df[,3:5])
cronbach.alpha(Threat)
SNSuse<-data.frame(df[,13:18])
cronbach.alpha(SNSuse)
##The correlation test
cor.test(df$Threat, df$SNSuse)
##The correlation test
cor.test("df$Threat", "df$SNSuse")
df$NSuse <-apply(df[,13:18],1,mean)
str(df)
View(df)
##The correlation test
cor.test(df$Threat, df$SNSuse)
df$SNSuse <-apply(df[,13:18],1,mean)
print(sd(df$SNSuse))
str(df)
cronbach.alpha(SNSuse)
##The correlation test
cor.test(df$Threat, df$SNSuse)
df$Anger <- apply(df[,6:8],1,mean)
df$Anxiety <- apply(df[,9:13],1,mean)
str(df)
View(df)
df <- read.csv("covidsns.csv")
str(df)
View(df)
df$Threat <-apply(df[,3:5],1,mean)
df$SNSuse <-apply(df[,13:18],1,mean)
str(df)
View(df)
summary(df$Threat)
print(sd(df$Threat))
print(sd(df$SNSuse))
##Checking Reliability
library(ltm)
library(psych)
Threat <- data.frame(df[,3:5])
cronbach.alpha(Threat)
SNSuse<-data.frame(df[,13:18])
cronbach.alpha(SNSuse)
##The correlation test
cor.test(df$Threat, df$SNSuse)
##Group activity, Exercise
df$Anger <- apply(df[,6:8],1,mean)
df$Anxiety <- apply(df[,9:13],1,mean)
str(df)
View(df)
Anger <- data.frame(df[6:8])
cronbach.alpha(Anger)
Anxiety <- data.frame(df[9:13])
cronbach.alpha(Anxiert)
Anger <- data.frame(df[6:8])
cronbach.alpha(Anger)
Anxiety <- data.frame(df[9:13])
cronbach.alpha(Anxiety)
cor.test(df$Anger, df$SNSuse)
cor.test(df$Anxiety, df$SNSuse)
df$Anger <- apply(df[,6:8],1,mean)
df$Anxiety <- apply(df[,9:13],1,mean)
str(df)
View(df)
print(sd(df$Anger))
print(sd(df$Anxiety))
Anger <- data.frame(df[6:8])
cronbach.alpha(Anger)
Anxiety <- data.frame(df[9:13])
cronbach.alpha(Anxiety)
cor.test(df$Anger, df$SNSuse)
cor.test(df$Anxiety, df$SNSuse)
cor.test(df$SNSuse, df$Anger)
cor.test(df$Anger, df$SNSuse)
cor.test(df$Anxiety, df$SNSuse)
cor.test(df$SNSuse, df$Anger)
df <- read.csv("covidsns.csv")
str(df)
View(df)
df$Threat <-apply(df[,3:5],1,mean)
df$SNSuse <-apply(df[,13:18],1,mean)
str(df)
View(df)
summary(df$Threat)
print(sd(df$Threat))
print(sd(df$SNSuse))
##Checking Reliability
library(ltm)
library(psych)
Threat <- data.frame(df[,3:5])
cronbach.alpha(Threat)
SNSuse<-data.frame(df[,13:18])
cronbach.alpha(SNSuse)
##The correlation test
cor.test(df$Threat, df$SNSuse)
##Group activity, Exercise
df$Anger <- apply(df[,6:8],1,mean)
df$Anxiety <- apply(df[,9:13],1,mean)
str(df)
View(df)
summary(df)
print(sd(df$Anger))
print(sd(df$Anxiety))
Anger <- data.frame(df[6:8])
cronbach.alpha(Anger)
Anxiety <- data.frame(df[9:13])
cronbach.alpha(Anxiety)
cor.test(df$Anger, df$SNSuse)
cor.test(df$Anxiety, df$SNSuse)
cor.test(df$SNSuse, df$Anger)
##The correlation test
cor.test(df$Threat, df$SNSuse)
df$Anger <- apply(df[,6:8],1,mean)
df$Anxiety <- apply(df[,9:13],1,mean)
str(df)
View(df)
summary(df)
print(sd(df$Anger))
print(sd(df$Anxiety))
Anger <- data.frame(df[6:8])
cronbach.alpha(Anger)
Anxiety <- data.frame(df[9:13])
cronbach.alpha(Anxiety)
SNSuse<-data.frame(df[,13:18])
cronbach.alpha(SNSuse)
cor.test(df$Anger, df$SNSuse)
cor.test(df$Anxiety, df$SNSuse)
df$SNSuse <-apply(df[,13:18],1,mean)
df$Anger <- apply(df[,6:8],1,mean)
df$Anxiety <- apply(df[,9:13],1,mean)
str(df)
View(df)
summary(df)
print(sd(df$Anger))
print(sd(df$Anxiety))
Anger <- data.frame(df[6:8])
cronbach.alpha(Anger)
Anxiety <- data.frame(df[9:13])
cronbach.alpha(Anxiety)
SNSuse<-data.frame(df[,13:18])
cronbach.alpha(SNSuse)
cor.test(df$Anger, df$SNSuse)
cor.test(df$Anxiety, df$SNSuse)
print(sd(df$SNSuse))
setwd("~/University/Y2S2/NM2207/Week 9")
---
title: "Kiera's website"
library(tidyverse)
library(fixerapi)
options(scipen = 999)
laptop_data <- read_csv("University/Y2S2/NM2207/Week 8/iaekr.github.io/laptop_data.csv")
library(readr)
laptop_data <- read_csv("laptop_data.csv")
View(laptop_data)
library(tidyverse)
library(fixerapi)
options(scipen = 999)
laptop_data <- read_csv("laptop_data.csv"))
library(tidyverse)
library(fixerapi)
options(scipen = 999)
laptop_data <- read_csv("laptop_data.csv")
brand_nos <- laptop_data %>%
group_by(Company) %>%
tally() %>%
filter(n>10) %>%
arrange(desc(n))
print(brand_nos)
ggplot(brand_quantity, aes(x = Price, y = Company)) + geom_boxplot()
brand_quantity <- brand_quantity %>%
mutate(Price = Price * tousd)
brand_quantity <- laptop_data %>%
select(Company, Weight, Price) %>%
group_by(Company) %>%
mutate(count = n()) %>%
filter(count>10) %>%
ungroup() %>%
select(-count)
tosgd <- 0.016
tousd <- 0.012
brand_quantity <- brand_quantity %>%
mutate(Price = Price * tousd)
print(brand_quantity)
ggplot(brand_nos, aes(x = n, y = Company)) + geom_bar(stat="identity")
ggplot(brand_quantity, aes(x = Price, y = Company)) + geom_boxplot()
---
title: "Kiera's website"
---
title: "Kiera's website"
title: "Kiera's website"
---
---
title: "Kiera's website"
title: "Kiera's website"
---
title: "Kiera's website"
```
I have chosen the data set named "**Laptop Prices Based on its specifications "** by user Abdul Rehman Amer from the website Kaggle. I will attempt to answer the question: What is the correlation between laptop specifications and pricing information, and which specifications are most strongly associated with the price of laptops?
---
title: "Kiera's website"
library(tidyverse)
my_data <- read.csv("laptop_data.csv")
glimpse(my_data)
library(tidyverse)
library(fixerapi)
options(scipen = 999)
laptop_data <- read_csv("laptop_data.csv")
brand_nos <- laptop_data %>%
group_by(Company) %>%
tally() %>%
filter(n>10) %>%
arrange(desc(n))
print(brand_nos)
brand_quantity <- laptop_data %>%
select(Company, Weight, Price) %>%
group_by(Company) %>%
mutate(count = n()) %>%
filter(count>10) %>%
ungroup() %>%
select(-count)
tosgd <- 0.016
tousd <- 0.012
brand_quantity <- brand_quantity %>%
mutate(Price = Price * tousd)
print(brand_quantity)
ggplot(brand_nos, aes(x = n, y = Company)) + geom_bar(stat="identity")
ggplot(brand_quantity, aes(x = Price, y = Company)) + geom_boxplot()
library(tidyverse)
my_data <- read.csv("laptop_data.csv")
glimpse(my_data)
library(tidyverse)
library(fixerapi)
options(scipen = 999)
laptop_data <- read_csv("laptop_data.csv")
brand_nos <- laptop_data %>%
group_by(Company) %>%
tally() %>%
filter(n>10) %>%
arrange(desc(n))
print(brand_nos)
brand_quantity <- laptop_data %>%
select(Company, Weight, Price) %>%
group_by(Company) %>%
mutate(count = n()) %>%
filter(count>10) %>%
ungroup() %>%
select(-count)
tosgd <- 0.016
tousd <- 0.012
brand_quantity <- brand_quantity %>%
mutate(Price = Price * tousd)
print(brand_quantity)
ggplot(brand_nos, aes(x = n, y = Company)) + geom_bar(stat="identity")
ggplot(brand_quantity, aes(x = Price, y = Company)) + geom_boxplot()
rsconnect::setAccountInfo(name='iaekr',
token='7EA5C246F0126938314622FAF9B4AF3A',
secret='HHNNdt+DqKneklPI1zINdpvWg10gu3HLooFvR1nN')
head(my_data)
head(laptop_data) %>%
group_by(company)
head(laptop_data) %>%
group_by(Company)
head(laptop_data) %>%
group_by(Company) %>%
tally()
glimpse(laptop_data) %>%
group_by(Company) %>%
tally()
glimpse(laptop_data) %>%
group_by(Company) %>%
tally()%>%
print(dbFetch())
print(dbFetch()) %>%
glimpse(laptop_data) %>%
group_by(Company) %>%
tally()%>%
glimpse(laptop_data) %>%
group_by(Company) %>%
tally()%>%
print(dbFetch())
print(dbFetch(total_brands_and_laptops))
total_brands_and_laptops <- glimpse(laptop_data) %>%
group_by(Company) %>%
tally()
print(dbGetRowCount(total_brands_and_laptops))
total_brands_and_laptops <- glimpse(laptop_data) %>%
group_by(Company) %>%
tally()
glimpse(laptop_data) %>%
group_by(Company) %>%
tally()
total_brands_and_laptops <- glimpse(laptop_data) %>%
group_by(Company) %>%
tally()
total_brands_and_laptops
length(total_brands_and_laptops)
vec_size(total_brands_and_laptops)
total_brands_and_laptops <- glimpse(laptop_data) %>%
group_by(Company) %>%
tally()
total_brands_and_laptops
nrow(total_brands_and_laptops)
total_brands_and_laptops <- glimpse(laptop_data) %>%
group_by(Company) %>%
tally()
total_brands_and_laptops
nrows(total_brands_and_laptops)
total_brands_and_laptops <- glimpse(laptop_data) %>%
group_by(Company) %>%
tally()
total_brands_and_laptops
nrow(total_brands_and_laptops)
nrow(total_brands_and_laptops)
total_brands_and_laptops <- glimpse(laptop_data) %>%
group_by(Company) %>%
tally()
library(tidyverse)
library(fixerapi)
options(scipen = 999)
laptop_data <- read_csv("laptop_data.csv")
brand_nos <- laptop_data %>%
group_by(Company) %>%
tally() %>%
filter(n>10) %>%
arrange(desc(n))
print(brand_nos)
ggplot(brand_nos, aes(x = n, y = Company)) + geom_bar(stat="identity")
ggplot(brand_quantity, aes(x = Price, y = Company)) + geom_boxplot()
brand_quantity <- laptop_data %>%
select(Company, Weight, Price) %>%
group_by(Company) %>%
mutate(count = n()) %>%
filter(count>10) %>%
ungroup() %>%
select(-count)
tosgd <- 0.016
tousd <- 0.012
brand_quantity <- brand_quantity %>%
mutate(Price = Price * tousd)
#Printing horizontal bar graph
ggplot(brand_nos, aes(x = n, y = Company)) + geom_bar(stat="identity")
library(tidyverse)
library(fixerapi)
options(scipen = 999)
laptop_data <- read_csv("laptop_data.csv")
brand_nos <- laptop_data %>%
group_by(Company) %>%
tally() %>%
filter(n>10) %>%
arrange(desc(n))
print(brand_nos)
library(tidyverse)
library(fixerapi)
options(scipen = 999)
laptop_data <- read_csv("laptop_data.csv")
brand_nos <- laptop_data %>%
group_by(Company) %>%
tally() %>%
filter(n>10) %>%
arrange(desc(n))
print(brand_nos)
brand_quantity <- laptop_data %>%
select(Company, Weight, Price) %>%
group_by(Company) %>%
mutate(count = n()) %>%
filter(count>10) %>%
ungroup() %>%
select(-count)
tosgd <- 0.016
tousd <- 0.012
brand_quantity <- brand_quantity %>%
mutate(Price = Price * tousd)
#Printing horizontal bar graph
ggplot(brand_nos, aes(x = n, y = Company)) +
labs(x="Number of types of laptops", y="Company")+
geom_bar(stat="identity")
total_brands_and_laptops <- glimpse(laptop_data) %>%
group_by(Company) %>%
tally()
library(tidyverse)
laptop_data <- read.csv("laptop_data.csv")
glimpse(laptop_data)
total_brands_and_laptops <- glimpse(laptop_data) %>%
group_by(Company) %>%
tally()
nrow(total_brands_and_laptops)
library(tidyverse)
library(fixerapi)
options(scipen = 999)
laptop_data <- read_csv("laptop_data.csv")
brand_nos <- laptop_data %>%
group_by(Company) %>%
tally() %>%
filter(n>10) %>%
arrange(desc(n))
print(brand_nos)
brand_quantity <- laptop_data %>%
select(Company, Weight, Price) %>%
group_by(Company) %>%
mutate(count = n()) %>%
filter(count>10) %>%
ungroup() %>%
select(-count)
tosgd <- 0.016
tousd <- 0.012
brand_quantity <- brand_quantity %>%
mutate(Price = Price * tousd)
#Printing horizontal bar graph
ggplot(brand_nos, aes(x = n, y = Company)) +
labs(x="Number of types of laptops", y="Company")+
geom_bar(stat="identity")
ggplot(brand_quantity, aes(x = Price, y = Company)) + geom_boxplot()
total_brands_and_laptops <- glimpse(laptop_data) %>%
group_by(Company) %>%
tally()
nrow(total_brands_and_laptops)
total_brands_and_laptops <- glimpse(laptop_data) %>%
group_by(Company) %>%
tally()
print( nrow(total_brands_and_laptops))
total_brands_and_laptops <- glimpse(laptop_data) %>%
group_by(Company) %>%
tally()
print( nrow(total_brands_and_laptops))
x<-1:10 #aka x<-c(1,2,3,4,5,6,7,8,9,10)
y<-11:20#aka y<-c(11,12,13,14,15,16,17,18,19,20)
cor(x,y)
x<-1:10
y<- -x
cor(x,y)
#sample 10 numbers randomly from between 1 and 100
x<- sample (1:100, 10)
#sample another 10 numbers randomly between 1 and 100
y<- sample(1:100,10)
print(x)
print(y)
print(cor(x,y))
print(cor.test(x,y))
head(mtcars)
#Is there a correlation between disp and hp? Is it significant?
cor.test(mtcars$disp, mtcars$hp)
#Is there a correlation between hp and mpg?
cor.test(mtcars$hp, mtcars$mph)
#Is there a correlation between hp and mpg?
cor.test(mtcars$hp, mtcars$mpg)
df
x1<-1:20
x2<-1:20
x3<-20:1
df<-data.frame(x1,x2,x3)
df
reate a new column for the mean of all three columns
#create a new column for the mean of all three columns
df$behavioural_intention <- apply(df,1,mean)
df
df$Means_of_x1_and_x2 <-apply(df[,1:2], 1, mean)
df
##Checking reliability
library(ltm)
#we use the following command to compute alpha for two items (columns): X1 and X2
scalel <-data.frame(df[,1:2])
cronbach.alpha(scale1)
#we use the following command to compute alpha for two items (columns): X1 and X2
scalel <-data.frame(df[,1:2])
cronbach.alpha(scale1)
#we use the following command to compute alpha for two items (columns): X1 and X2
scale1 <-data.frame(df[,1:2])
cronbach.alpha(scale1)
setwd("~/University/Y2S2/NM2103 R Analysis")
migrant_salaries<-c(1100,1200,900,685, 1320 , 1055 , 745, 1350 , 1400,
1700 , 1650 , 1245 , 1120 , 1075 , 980, 1025 , 1550 , 1945,
750 , 1140 , 1250 , 1090 , 1150 , 940, 880, 950)
t.test(migrant_salaries, mu=3940)
#the one-tailed test (uses alternative command)
t.test(migrant_sales, mu=3940, alternative = "less")
#the one-tailed test (uses alternative command)
t.test(migrant_salaries, mu=3940, alternative = "less")
citizen_salaries <- c(3500 , 4250 , 2560 , 1900 , 6750 , 7500 , 3550 , 2820 , 6520 ,
4570 , 1700 , 2510 , 8440 , 7510 , 4580)
t,test(migrant_salaries, citizen_salaries) #there is no longer a mu
citizen_salaries <- c(3500 , 4250 , 2560 , 1900 , 6750 , 7500 , 3550 , 2820 , 6520 ,
4570 , 1700 , 2510 , 8440 , 7510 , 4580)
t.test(migrant_salaries, citizen_salaries) #there is no longer a mu
options(scipen = 999)
citizen_salaries <- c(3500 , 4250 , 2560 , 1900 , 6750 , 7500 , 3550 , 2820 , 6520 ,
4570 , 1700 , 2510 , 8440 , 7510 , 4580)
t.test(migrant_salaries, citizen_salaries) #there is no longer a mu
p-value is very high (1)
citizen_salaries <- c(3500 , 4250 , 2560 , 1900 , 6750 , 7500 , 3550 , 2820 , 6520 ,
4570 , 1700 , 2510 , 8440 , 7510 , 4580)
t.test(migrant_salaries, citizen_salaries) #there is no longer a mu
This was a two sided test. We can do the corresponding one-sided test as well. What happens if use alternative = greater?
t.test(migrant_salaries, citizens_salaries, alternative = "greater")
This was a two sided test. We can do the corresponding one-sided test as well. What happens if use alternative = greater?
t.test(migrant_salaries, citizen_salaries, alternative = "greater")
t.test(migrant_salaries, citizen_salaries, alternative="less")
migrant_salaries_201718 <-c ( 1100 , 1200 , 900 , 685, 1320 , 1055 , 745, 1350 , 1400,
1700 , 1650 , 1245 , 1120 , 1075 , 980, 1025 , 1550 , 1945,
750 , 1140 , 1250 , 1090 , 1150 , 940, 880, 950)
migrant_salaries_201819 <- c ( 1150 , 1210 , 950 , 700, 1380 , 1100 , 800, 1380 , 1450,
1780 , 1700 , 1295 , 1190 , 1145 , 1020 , 1100 , 1600 , 2000 ,
750 , 1150 , 1250 , 1090 , 1150 , 980, 900, 980)
t.test(migrant_salaries_201718, migrant_salaries_201819, paired=TRUE)
#Paired t-test, one-sided test:
t.test(migrant_salaries201718, migrant_salaries_201819, paired=TRUE, alternative="less")
t.test(migrant_salaries_201718, migrant_salaries_201819, paired=TRUE)
#Paired t-test, one-sided test:
t.test(migrant_salaries201718, migrant_salaries_201819, paired=TRUE, alternative="less")
t.test(migrant_salaries_201718, migrant_salaries_201819, paired=TRUE)
#Paired t-test, one-sided test:
t.test(migrant_salaries_201718, migrant_salaries_201819, paired=TRUE, alternative="less")
